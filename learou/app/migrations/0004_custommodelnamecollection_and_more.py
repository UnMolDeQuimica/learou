# Generated by Django 5.2.3 on 2025-07-02 23:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0003_bibliography_icon_bibliography_model_custom_name_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomModelNameCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Image')),
                ('is_active', models.BooleanField(default=False, verbose_name='Is active')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='author',
            name='model_custom_name',
        ),
        migrations.RemoveField(
            model_name='bibliography',
            name='model_custom_name',
        ),
        migrations.RemoveField(
            model_name='bibliographytype',
            name='model_custom_name',
        ),
        migrations.RemoveField(
            model_name='cheatsheet',
            name='model_custom_name',
        ),
        migrations.RemoveField(
            model_name='diary',
            name='model_custom_name',
        ),
        migrations.RemoveField(
            model_name='diaryentry',
            name='model_custom_name',
        ),
        migrations.RemoveField(
            model_name='link',
            name='model_custom_name',
        ),
        migrations.RemoveField(
            model_name='linktype',
            name='model_custom_name',
        ),
        migrations.RemoveField(
            model_name='project',
            name='model_custom_name',
        ),
        migrations.RemoveField(
            model_name='projectstatus',
            name='model_custom_name',
        ),
        migrations.RemoveField(
            model_name='projecttype',
            name='model_custom_name',
        ),
        migrations.RemoveField(
            model_name='review',
            name='model_custom_name',
        ),
        migrations.RemoveField(
            model_name='task',
            name='model_custom_name',
        ),
        migrations.RemoveField(
            model_name='taskstatus',
            name='model_custom_name',
        ),
        migrations.RemoveField(
            model_name='tasktype',
            name='model_custom_name',
        ),
        migrations.RemoveField(
            model_name='technology',
            name='model_custom_name',
        ),
        migrations.CreateModel(
            name='CustomModelName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Image')),
                ('model', models.CharField(choices=[('AbstractType', 'Abstract Type'), ('TaskType', 'Task Type'), ('TaskStatus', 'Task Status'), ('Task', 'Task'), ('LinkType', 'Link Type'), ('Link', 'Link'), ('Review', 'Review'), ('Author', 'Author'), ('BibliographyType', 'Bibliography Type'), ('Bibliography', 'Bibliography'), ('CheatSheet', 'Cheat Sheet'), ('Technology', 'Technology'), ('ProjectType', 'Project Type'), ('ProjectStatus', 'Project Status'), ('Project', 'Project'), ('Diary', 'Diary'), ('DiaryEntry', 'Diary Entry'), ('CustomModelNameCollection', 'Custom Model Name Collection'), ('CustomModelName', 'Custom Model Name')], verbose_name='Model')),
                ('custom_model_name_collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.custommodelnamecollection')),
            ],
            options={
                'unique_together': {('model', 'custom_model_name_collection')},
            },
        ),
    ]
